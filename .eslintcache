[{"/Users/atia/Documents/typescript/src/index.tsx":"1","/Users/atia/Documents/typescript/src/reportWebVitals.ts":"2","/Users/atia/Documents/typescript/src/App.tsx":"3","/Users/atia/Documents/typescript/src/components/DropDown.tsx":"4"},{"size":500,"mtime":1606821709714,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1606821709715,"results":"7","hashOfConfig":"6"},{"size":2698,"mtime":1606822699250,"results":"8","hashOfConfig":"6"},{"size":3064,"mtime":1606822622184,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"kk4m5q",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/atia/Documents/typescript/src/index.tsx",[],["21","22"],"/Users/atia/Documents/typescript/src/reportWebVitals.ts",[],"/Users/atia/Documents/typescript/src/App.tsx",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport DropDownCustom from './components/DropDown';\nimport React from 'react';\n\n\n//import Dropdown from './DropdownMenu';\n\nfunction App() {\n  const list = [\n    { id:0, key: \n      'location',\n      selected: false,\n      label: \"Item 1\",\n       value: \"Item One\" ,\n      options: [\n        { id:0,label: \"Item 1-1\", value: \"Item one-One\" },\n        { id:1,label: \"Item 1-2\", value: \"Item one-Two\" }\n      ] },\n    {\n      id:1,\n      key: 'location',\n      selected: false,\n    label: \"Item 2\", value:\"Item two\",\n    \n    options: [\n      {id:0, label: \"Item 2-1\", value: \"Item Two-One\" },\n      {id:1, label: \"Item 2-2\", value: \"Item Two-Two\" }\n    ] \n  },\n  {id:2, key: 'location',\n   selected: false, \n   label: \"Item 3\", \n   value: \"Item Three\",\n   options: [\n    {id:0, label: \"Item 3-1\", value: \"Item three-One\" },\n    {id:1, label: \"Item 3-2\", value: \"Item three-Two\" }\n  ] },\n  {id:3, key: 'location',\n   selected: false, \n   label: \"Item 4\", \n   value: \"Item four\",\n   options: [] }\n]\n  // const list=[\n  //   {\n  //       id: 0,\n  //       title: 'New York',\n  //       students:[{name:'Name',department:'bscs'}],\n  //       selected: false,\n  //       key: 'location'\n  //   },\n  //   {\n  //     id: 1,\n  //     title: 'Dublin',\n  //     students:[{name:'Name',department:'bscs'}],\n  //     selected: false,\n  //     key: 'location'\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'California',\n  //     students:[{name:'Name',department:'bscs'}],\n  //     selected: false,\n  //     key: 'location'\n  //   },\n  //   {\n  //     id: 3,\n  //     title: 'Istanbul',\n  //     students:[{name:'Name',department:'bscs'}],\n  //     selected: false,\n  //     key: 'location'\n  //   },\n  //   {\n  //     id: 4,\n  //     title: 'Izmir',\n  //     students:[{name:'Name',department:'bscs'}],\n  //     selected: false,\n  //     key: 'location'\n  //   },\n  //   {\n  //     id: 5,\n  //     title: 'Oslo',\n  //     selected: false,\n  //     students:[{name:'Name',department:'bscs'},{name:'Name',department:'bscs'},{name:'Name',department:'bscs'}],\n  //     key: 'location'\n  //   }\n  // ]\n\n  // useEffect=(()=>{\n  //   const count = list.filter(function(a) { return a.selected; }).length;\n  //   if(count === 0){\n  //     return {headerTitle: list.title}\n  //   }\n  //   else if(count === 1){\n  //     return {headerTitle: `${count} ${list.titleHelper}`}\n  //   }\n  //   else if(count > 1){\n  //     return {headerTitle: `${count} ${list.titleHelper}s`}\n  //   }\n  // },[list])\n\n  \n  return (\n    <div className=\"App\">\n      <DropDownCustom\n         title=\"Select\"\n         list={list}\n        \n      />\n    \n    </div>\n  );\n}\n\nexport default App;\n","/Users/atia/Documents/typescript/src/components/DropDown.tsx",["24","25","26"],"import React, { useEffect, useState } from \"react\";\nimport \"../styles/global.sass\";\nimport { ChevronDown, ChevronUp } from \"react-feather\";\n\nexport default function DropDown(props: { list: any; title: any; }) {\n  const list = props.list;\n  const [location, setLocation] = useState(props.list);\n  const [listOpen, setListOpen] = useState(false);\n  const [nestlistOpen, setnestListOpen] = useState(false);\n  const [nestItem, setNestItem] = useState({id:0,key:'',selected:false,label:'',value:'',options:[]});\n  const [keyword, setkeyword] = useState(\"\");\n  const [headerTitle, setHeadeTitle] = useState(props.title);\n\n  const toggleItem = (id: string | number , key: any) => {\n    let tempp = list[id];\n    \n    setNestItem({id:tempp.id,key:tempp.key,selected:tempp.selected,\n      label:tempp.label,value:tempp.value,options:tempp.options});\n    setnestListOpen((prevState) => !prevState);\n    setkeyword(\"\");\n    let temp = list[id];\n    temp.selected = !temp.selected;\n    list[id] = temp;\n    //  setHeadeTitle(list[id].value)\n    setLocation(temp.selected);\n  };\n  const toggleNestItem = (id: React.Key, opId: React.Key) => {\n    let temp = list[id].options[opId];\n    console.log(temp.value);\n    setHeadeTitle(temp.value);\n    setLocation(list[id].selected);\n  };\n\n  const toggleList = () => {\n    setListOpen((prevState) => !prevState);\n    setkeyword(\"\");\n  };\n  return (\n    <div className=\"dd-wrapper\">\n      <div className=\"dd-headers\" onClick={toggleList}>\n        <div className=\"dd-header-title\">{headerTitle}</div>\n        {listOpen ? <ChevronUp size={24} /> : <ChevronDown size={24} />}\n      </div>\n      {listOpen && (\n        <ul className=\"dd-list\">\n          {list.map((item: { id: string | number ; key: any; value: React.ReactNode; }) => (\n            <li\n              className=\"dd-list-item\"\n              key={item.id}\n              onClick={() => toggleItem(item.id, item.key)}\n            >\n              <div className=\"dd-header\">\n                <div className=\"dd-header-titles\">\n                  {item.value}\n                  <div>\n                    {nestlistOpen ? (\n                      <ChevronUp size={24} />\n                    ) : (\n                      <ChevronDown size={24} />\n                    )}\n                  </div>\n                </div>\n\n                {nestlistOpen && nestItem.id === item.id ? (\n                  <ul style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    {nestItem.options.map((ite: { id: string | number; value: React.ReactNode; }) => (\n                      <li\n                        key={ite.id}\n                        className=\"dd-list-item\"\n                        onClick={() => toggleNestItem(item.id, ite.id)}\n                      >\n                        <div className=\"dd-header-title-list\">{ite.value}</div>\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <ul></ul>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":26},{"ruleId":"31","severity":1,"message":"36","line":7,"column":10,"nodeType":"33","messageId":"34","endLine":7,"endColumn":18},{"ruleId":"31","severity":1,"message":"37","line":11,"column":10,"nodeType":"33","messageId":"34","endLine":11,"endColumn":17},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'location' is assigned a value but never used.","'keyword' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]